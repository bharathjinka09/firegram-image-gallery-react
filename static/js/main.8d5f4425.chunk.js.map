{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","useFiresore","console","log","map","key","layout","whileHover","opacity","onClick","img","style","objectFit","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d5f4425.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Upload image</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app'\n// file storage\nimport 'firebase/storage'\n// database\nimport 'firebase/firestore'\n\n// Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyAzofFadz4DYEQO99gCRbKSVAkCdDIKSEs\",\n    authDomain: \"firegram-bb6f7.firebaseapp.com\",\n    databaseURL: \"https://firegram-bb6f7.firebaseio.com\",\n    projectId: \"firegram-bb6f7\",\n    storageBucket: \"firegram-bb6f7.appspot.com\",\n    messagingSenderId: \"781170915982\",\n    appId: \"1:781170915982:web:62822f484678083d1227df\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage()\n  const projectFirestore = firebase.firestore()\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp } ","import { useState, useEffect } from 'react'\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\n\nconst useStorage = (file) => {\n\tconst [progress, setProgress] = useState(0)\n\tconst [error, setError] = useState(null)\n\tconst [url, setUrl] = useState(null)\n\n\tuseEffect(() =>{\n\t\t// references\n\t\tconst storageRef = projectStorage.ref(file.name)\n\t\tconst collectionRef = projectFirestore.collection('images')\n\n\t\tstorageRef.put(file).on('state_changed', (snap) => {\n\t\t\tlet percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n\t\t\tsetProgress(percentage);\n\t\t}, (err) => {\n\t\t\tsetError(err)\n\t\t}, async () => {\n\t\t\tconst url = await storageRef.getDownloadURL()\n\t\t\tconst createdAt = timestamp()\n\t\t\tcollectionRef.add({url: url, createdAt })\n\t\t\tsetUrl(url)\n\t\t}) \n\t}, [file]);\n\n\treturn { progress, url, error }\n}\n\n\nexport default useStorage","import React, {useEffect} from 'react'\nimport useStorage from '../hooks/useStorage'\nimport { motion } from 'framer-motion'\n\nconst ProgressBar = ({file, setFile}) => {\n\tconst { url, progress } = useStorage(file)\n\n\tuseEffect(() => {\n\t\tif(url){\n\t\t\tsetFile(null);\n\t\t}\n\t}, [url, setFile])\n\n\treturn (\n\t\t<motion.div className='progress-bar'\n\t\t\tinitial={{ width:0 }}\n\t\t\tanimate={{ width: progress + '%' }}\n\t\t></motion.div>\n\t)\n }\n\n\nexport default ProgressBar","import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar'\n\nconst UploadForm = () => {\n\tconst [file, setFile] = useState(null)\n\tconst [error, setError] = useState(null)\n\n\tconst types = ['image/png', 'image/jpg', 'image/jpeg']\n\n\tconst changeHandler = (e) => {\n\t\tlet selected = e.target.files[0]\n\n\t\tif (selected && types.includes(selected.type)){\n\t\t\tsetFile(selected)\n\t\t\tsetError('')\n\t\t} else{\n\t\t\tsetFile(null)\n\t\t\tsetError('Please select an image file (png, jpg or jpeg)')\n\t\t}\n\t}\n\n\treturn (\n\t\t<form>\n\t\t\t<label>\n\t\t\t\t<input type=\"file\" onChange={changeHandler} />\n\t\t\t\t<span>+</span>\n\t\t\t</label>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t<div className=\"output\">\n\t\t\t\t{ error && <div className=\"error\">{ error }</div> }\n\t\t\t\t{ file && <div>{ file.name }</div> }\n\t\t\t\t{ file && <ProgressBar file={file} setFile={setFile} /> }\n\t\t\t</div>\n\t\t</form>\n\n\t)\n}\n\nexport default UploadForm","import { useState, useEffect } from 'react'\nimport { projectFirestore } from '../firebase/config'\n\nconst useFirestore = (collection) => {\n\tconst [docs, setDocs] = useState([]);\n\n\tuseEffect(() => {\n\t\tconst unsub = projectFirestore.collection(collection)\n\t\t    .orderBy('createdAt','desc')\n\t\t\t.onSnapshot((snap) => {\n\t\t\t\tlet documents = [];\n\t\t\t\tsnap.forEach(doc => {\n\t\t\t\t\tdocuments.push({...doc.data(), id: doc.id})\n\t\t\t\t});\n\t\t\t\tsetDocs(documents)\n\t\t\t});\n\n\t\t\treturn () => unsub();\n\n\t}, [collection])\n\n\treturn { docs }\n}\n\nexport default useFirestore","import React from 'react'\nimport useFiresore from '../hooks/useFirestore'\nimport {motion} from 'framer-motion'\n\nconst ImageGrid = ({ setSelectedImg }) => {\n\tconst { docs } = useFiresore('images')\n\tconsole.log(docs)\n\n\treturn (\n\t\t<div className=\"img-grid\">\n\t       { docs && docs.map(doc => (\n\t        <motion.div className=\"img-wrap\" key={doc.id}\n\t        \tlayout\n\t        \twhileHover={{opacity:1}}\n\t        \tonClick={() => setSelectedImg(doc.url)}\n\t        >\n\t          <motion.img style={{objectFit:'contain'}} width='100%' src={doc.url} alt=\"uploaded pic\" \n\t          \tinitial={{ opacity:0 }}\n\t          \tanimate={{ opacity:1 }}\n\t          \ttransition={{ delay:1 }}\n\t          />\n\t        </motion.div>\n\t       ))}\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default ImageGrid","import React from 'react'\nimport { motion } from 'framer-motion'\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n\n\tconst handleClick = (e) => {\n\t\tif(e.target.classList.contains('backdrop')){\n\t\t\tsetSelectedImg(null)\n\t\t}\n\t}\n\n\treturn (\n\t\t<motion.div className='backdrop' onClick={handleClick}\n\t\t\tinitial={{ opacity:0 }}\n\t\t\tanimate={{ opacity:1 }}\n\t\t>\n\t\t\t<motion.img src={selectedImg} alt=\"enlarged img\" \n\t\t\t\tinitial={ { y: '-100vh' }}\n\t\t\t\tanimate={ { y:0 }}\n\t\t\t/>\n\t\t</motion.div>\n\t)\n}\n\nexport default Modal","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n  \n  const [selectedImg, setSelectedImg] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}